{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyerin/myProject/\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/project/my_web/my-sool-recommender/src/Components/ProductSlide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport dummySool from \"../static/dummyData\";\nimport ProductCard from \"./ProductCard\";\nimport './ProductSlide.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductSlide = () => {\n  _s();\n\n  // 카드 + margin 값 -> 220px\n  const cardSize = 220; // 페이지 당 들어갈 수 있는 카드 수는 product-slide__item의 width 값에 따라 달라져야 한다. -> setLimit으로 관리\n\n  const slide = useRef(null);\n  console.log(slide.current.offsetWidth); // 유동적으로 관리할 수 있다면! -> ProductSlide.css의 flex-wrap 속성 설정해야 함\n  // 페이지 당 들어갈 카드 수 limit (state)\n\n  const [limit, setLimit] = useState(3); // 현재 페이지 번호 처음엔 1페이지\n\n  const [page, setPage] = useState(1); // 현재 페이지의 첫번째 요소의 index 구하기\n  // ex) 2페이지 면 리스트 중 3번째 요소이다. (2 - 1) * 3\n\n  const offset = (page - 1) * limit; // 전체 페이지 계산 : 전체 데이터의 개수를 페이지 당 표시할 개수로 나눈다.\n\n  const numPage = Math.ceil(dummySool.length / limit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-slide\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page - 1),\n      disabled: page === 1,\n      children: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"product-slide__item\",\n      ref: slide,\n      children: dummySool.slice(offset, offset + limit).map(sool => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          sool: sool\n        }, sool.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 70\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      disabled: page === numPage,\n      children: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductSlide, \"ti5gD3wyF+MDTZRb9aU9E/kTDdA=\");\n\n_c = ProductSlide;\nexport default ProductSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSlide\");","map":{"version":3,"names":["React","useState","useRef","dummySool","ProductCard","ProductSlide","cardSize","slide","console","log","current","offsetWidth","limit","setLimit","page","setPage","offset","numPage","Math","ceil","length","slice","map","sool","id"],"sources":["/Users/chaeyerin/myProject/졸업 프로젝트/project/my_web/my-sool-recommender/src/Components/ProductSlide.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nimport dummySool from \"../static/dummyData\";\nimport ProductCard from \"./ProductCard\";\nimport './ProductSlide.css'\n\nconst ProductSlide = () => {\n    // 카드 + margin 값 -> 220px\n    const cardSize = 220;\n\n    // 페이지 당 들어갈 수 있는 카드 수는 product-slide__item의 width 값에 따라 달라져야 한다. -> setLimit으로 관리\n    const slide = useRef(null)\n    console.log(slide.current.offsetWidth);\n    // 유동적으로 관리할 수 있다면! -> ProductSlide.css의 flex-wrap 속성 설정해야 함\n    // 페이지 당 들어갈 카드 수 limit (state)\n    const [limit, setLimit] = useState(3);\n\n    // 현재 페이지 번호 처음엔 1페이지\n    const [page, setPage] = useState(1);\n\n\n    // 현재 페이지의 첫번째 요소의 index 구하기\n    // ex) 2페이지 면 리스트 중 3번째 요소이다. (2 - 1) * 3\n    const offset = (page - 1) * limit; \n\n    // 전체 페이지 계산 : 전체 데이터의 개수를 페이지 당 표시할 개수로 나눈다.\n    const numPage = Math.ceil(dummySool.length / limit)\n\n    return (\n        <div className=\"product-slide\">\n            {/* 이전 페이지 이동 */}\n            <button onClick={() => setPage(page-1)} disabled={page === 1}>left</button>\n            <ul className=\"product-slide__item\" ref={slide}>\n                {/* 페이지 별로 slice 해서 보여준다 */}\n                {dummySool.slice(offset, offset+limit).map((sool) => <li><ProductCard key={sool.id} sool={sool}/></li>)}\n            </ul>\n            {/* 다음 페이지 이동 */}\n            <button onClick={() => setPage(page + 1)} disabled={page === numPage}>right</button>\n        </div>\n    )\n}\n\nexport default ProductSlide;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB;EACA,MAAMC,QAAQ,GAAG,GAAjB,CAFuB,CAIvB;;EACA,MAAMC,KAAK,GAAGL,MAAM,CAAC,IAAD,CAApB;EACAM,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAN,CAAcC,WAA1B,EANuB,CAOvB;EACA;;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC,CATuB,CAWvB;;EACA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC,CAZuB,CAevB;EACA;;EACA,MAAMe,MAAM,GAAG,CAACF,IAAI,GAAG,CAAR,IAAaF,KAA5B,CAjBuB,CAmBvB;;EACA,MAAMK,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUhB,SAAS,CAACiB,MAAV,GAAmBR,KAA7B,CAAhB;EAEA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,wBAEI;MAAQ,OAAO,EAAE,MAAMG,OAAO,CAACD,IAAI,GAAC,CAAN,CAA9B;MAAwC,QAAQ,EAAEA,IAAI,KAAK,CAA3D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAI,SAAS,EAAC,qBAAd;MAAoC,GAAG,EAAEP,KAAzC;MAAA,UAEKJ,SAAS,CAACkB,KAAV,CAAgBL,MAAhB,EAAwBA,MAAM,GAACJ,KAA/B,EAAsCU,GAAtC,CAA2CC,IAAD,iBAAU;QAAA,uBAAI,QAAC,WAAD;UAA2B,IAAI,EAAEA;QAAjC,GAAkBA,IAAI,CAACC,EAAvB;UAAA;UAAA;UAAA;QAAA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAApD;IAFL;MAAA;MAAA;MAAA;IAAA,QAHJ,eAQI;MAAQ,OAAO,EAAE,MAAMT,OAAO,CAACD,IAAI,GAAG,CAAR,CAA9B;MAA0C,QAAQ,EAAEA,IAAI,KAAKG,OAA7D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAlCD;;GAAMZ,Y;;KAAAA,Y;AAoCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}