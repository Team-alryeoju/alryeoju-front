{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyerin/myProject/\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/project/my_alryeoju_front/alryeoju-front/src/Components/ProductSlide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport dummySool from \"../static/dummyData\";\nimport ProductCard from \"./ProductCard\";\nimport './ProductSlide.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductSlide = () => {\n  _s();\n\n  // 카드 + margin 값 -> 220px\n  // css 가 변경되면 값도 변경되어야 함!\n  const cardSize = 220; // product-slide__wrapper의 width를 가져오기 위해 useRef 사용한다.\n\n  const ref = useRef(); // 페이지 당 들어갈 카드 수 limit (state)\n\n  const [limit, setLimit] = useState(3); // 현재 페이지 번호 page (state)\n\n  const [page, setPage] = useState(1); // 현재 페이지의 첫번째 요소의 index 구하기\n\n  let offset = (page - 1) * limit; // 전체 페이지 계산 : 전체 데이터의 개수를 페이지 당 표시할 개수로 나눈다.\n\n  const numPage = Math.ceil(dummySool.length / limit);\n\n  const changeWidth = () => {\n    let newWidth = ref.current.clientWidth;\n    setPage(1); // if(newWidth <= 350) setLimit(1);\n    // else if(newWidth > 350 && newWidth <= 600) setLimit(2);\n    // else setLimit(3);\n\n    if (newWidth > cardSize * 3) setLimit(3);else if (newWidth > cardSize * 2) setLimit(2);else setLimit(1);\n  };\n\n  useEffect(() => {\n    changeWidth();\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"resize\", changeWidth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-slide col-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-slide__main row-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page - 1),\n        disabled: page === 1,\n        children: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"product-slide__wrapper row-center\",\n        ref: ref,\n        children: dummySool.slice(offset, offset + limit).map(sool => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(ProductCard, {\n            sool: sool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 92\n          }, this)\n        }, sool.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 74\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page + 1),\n        disabled: page === numPage,\n        children: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductSlide, \"035CR4S+8NrteD6ey8QzH3X5S3c=\");\n\n_c = ProductSlide;\nexport default ProductSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSlide\");","map":{"version":3,"names":["React","useState","useRef","useEffect","dummySool","ProductCard","ProductSlide","cardSize","ref","limit","setLimit","page","setPage","offset","numPage","Math","ceil","length","changeWidth","newWidth","current","clientWidth","window","addEventListener","slice","map","sool","id"],"sources":["/Users/chaeyerin/myProject/졸업 프로젝트/project/my_alryeoju_front/alryeoju-front/src/Components/ProductSlide.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nimport dummySool from \"../static/dummyData\";\nimport ProductCard from \"./ProductCard\";\nimport './ProductSlide.css'\n\nconst ProductSlide = () => {\n    // 카드 + margin 값 -> 220px\n    // css 가 변경되면 값도 변경되어야 함!\n    const cardSize = 220;\n\n    // product-slide__wrapper의 width를 가져오기 위해 useRef 사용한다.\n    const ref = useRef()\n\n    // 페이지 당 들어갈 카드 수 limit (state)\n    const [limit, setLimit] = useState(3);\n\n    // 현재 페이지 번호 page (state)\n    const [page, setPage] = useState(1);\n\n    // 현재 페이지의 첫번째 요소의 index 구하기\n    let offset = (page - 1) * limit; \n\n    // 전체 페이지 계산 : 전체 데이터의 개수를 페이지 당 표시할 개수로 나눈다.\n    const numPage = Math.ceil(dummySool.length / limit)\n\n    const changeWidth = () => {\n        let newWidth = ref.current.clientWidth;\n        \n        setPage(1);\n\n        // if(newWidth <= 350) setLimit(1);\n        // else if(newWidth > 350 && newWidth <= 600) setLimit(2);\n        // else setLimit(3);\n        if(newWidth > cardSize * 3) setLimit(3);\n        else if(newWidth > cardSize * 2) setLimit(2);\n        else setLimit(1);\n    }\n\n    useEffect(() => {\n        changeWidth();\n    }, [])\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", changeWidth)\n    }, [])\n\n    return (\n        <div className=\"product-slide col-center\">\n            <div className=\"product-slide__main row-center\">\n                {/* 이전 페이지 이동 */}\n                <button onClick={() => setPage(page - 1)} disabled={page === 1}>left</button>\n                <ul className=\"product-slide__wrapper row-center\" ref={ref}>\n                    {/* 페이지 별로 slice 해서 보여준다 */}\n                    {dummySool.slice(offset, offset+limit).map((sool) => <li key={sool.id}><ProductCard sool={sool}/></li>)}\n                </ul>\n                {/* 다음 페이지 이동 */}\n                <button onClick={() => setPage(page + 1)} disabled={page === numPage}>right</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductSlide"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB;EACA;EACA,MAAMC,QAAQ,GAAG,GAAjB,CAHuB,CAKvB;;EACA,MAAMC,GAAG,GAAGN,MAAM,EAAlB,CANuB,CAQvB;;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC,CATuB,CAWvB;;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC,CAZuB,CAcvB;;EACA,IAAIY,MAAM,GAAG,CAACF,IAAI,GAAG,CAAR,IAAaF,KAA1B,CAfuB,CAiBvB;;EACA,MAAMK,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUZ,SAAS,CAACa,MAAV,GAAmBR,KAA7B,CAAhB;;EAEA,MAAMS,WAAW,GAAG,MAAM;IACtB,IAAIC,QAAQ,GAAGX,GAAG,CAACY,OAAJ,CAAYC,WAA3B;IAEAT,OAAO,CAAC,CAAD,CAAP,CAHsB,CAKtB;IACA;IACA;;IACA,IAAGO,QAAQ,GAAGZ,QAAQ,GAAG,CAAzB,EAA4BG,QAAQ,CAAC,CAAD,CAAR,CAA5B,KACK,IAAGS,QAAQ,GAAGZ,QAAQ,GAAG,CAAzB,EAA4BG,QAAQ,CAAC,CAAD,CAAR,CAA5B,KACAA,QAAQ,CAAC,CAAD,CAAR;EACR,CAXD;;EAaAP,SAAS,CAAC,MAAM;IACZe,WAAW;EACd,CAFQ,EAEN,EAFM,CAAT;EAIAf,SAAS,CAAC,MAAM;IACZmB,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,WAAlC;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAK,SAAS,EAAC,0BAAf;IAAA,uBACI;MAAK,SAAS,EAAC,gCAAf;MAAA,wBAEI;QAAQ,OAAO,EAAE,MAAMN,OAAO,CAACD,IAAI,GAAG,CAAR,CAA9B;QAA0C,QAAQ,EAAEA,IAAI,KAAK,CAA7D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAI,SAAS,EAAC,mCAAd;QAAkD,GAAG,EAAEH,GAAvD;QAAA,UAEKJ,SAAS,CAACoB,KAAV,CAAgBX,MAAhB,EAAwBA,MAAM,GAACJ,KAA/B,EAAsCgB,GAAtC,CAA2CC,IAAD,iBAAU;UAAA,uBAAkB,QAAC,WAAD;YAAa,IAAI,EAAEA;UAAnB;YAAA;YAAA;YAAA;UAAA;QAAlB,GAASA,IAAI,CAACC,EAAd;UAAA;UAAA;UAAA;QAAA,QAApD;MAFL;QAAA;QAAA;QAAA;MAAA,QAHJ,eAQI;QAAQ,OAAO,EAAE,MAAMf,OAAO,CAACD,IAAI,GAAG,CAAR,CAA9B;QAA0C,QAAQ,EAAEA,IAAI,KAAKG,OAA7D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAvDD;;GAAMR,Y;;KAAAA,Y;AAyDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}