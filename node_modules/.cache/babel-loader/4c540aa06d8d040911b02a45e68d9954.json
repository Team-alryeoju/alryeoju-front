{"ast":null,"code":"var _jsxFileName = \"/Users/chaeyerin/myProject/\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/project/my_web/my-sool-recommender/src/Components/ProductSlide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport dummySool from \"../static/dummyData\";\nimport ProductCard from \"./ProductCard\";\nimport './ProductSlide.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductSlide = () => {\n  _s();\n\n  // 카드 + margin 값 -> 220px\n  const cardSize = 220; // product-slide__wrapper의 width를 가져오기 위해 useRef 사용한다.\n\n  const ref = useRef(); // const countCard = () => {\n  //     // 현재 슬라이드 전체의 크기 가져오기\n  //     let newWidth = ref.current.clientWidth;\n  //     if(newWidth > cardSize * 5) return 5;\n  //     else if(newWidth > cardSize * 4) return 4;\n  //     else if(newWidth > cardSize * 3) return 3;\n  //     else if(newWidth > cardSize * 2) return 2;\n  //     else return 1;\n  // }\n  // 페이지 당 들어갈 수 있는 카드 수는 product-slide__wrapper의 width 값에 따라 달라져야 한다. -> setLimit으로 관리\n  // 유동적으로 관리할 수 있다면! -> ProductSlide.css 안의  flex-wrap 속성 설정해야 함\n  // 페이지 당 들어갈 카드 수 limit (state)\n\n  const [limit, setLimit] = useState(countCard()); // 페이지 바뀔 때마다 리렌더링\n  // 현재 페이지 번호 page (state)\n\n  const [page, setPage] = useState(); // 초기 렌더링 때\n\n  useEffect(() => {\n    getListSize();\n  }, [listItems]); // 윈도우 크기가 바뀔 때마다 slide의 size 가져오기 \n\n  useEffect(() => {\n    let newWidth = ref.current.clientWidth;\n    window.addEventListener(\"resize\", () => {\n      if (newWidth > cardSize * 5) {\n        setLimit(5);\n      } else if (newWidth > cardSize * 4) {\n        setLimit(4);\n      } else if (newWidth > cardSize * 3) {\n        setLimit(3);\n      } else if (newWidth > cardSize * 2) {\n        setLimit(2);\n      } else {\n        setLimit(1);\n      }\n    });\n  }, []); // 현재 페이지의 첫번째 요소의 index 구하기\n  // ex) 2페이지 면 리스트 중 3번째 요소이다. (2 - 1) * 3\n\n  const offset = (page - 1) * limit; // 전체 페이지 계산 : 전체 데이터의 개수를 페이지 당 표시할 개수로 나눈다.\n\n  const numPage = Math.ceil(dummySool.length / limit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-slide\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page - 1),\n      disabled: page === 1,\n      children: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"product-slide__wrapper\",\n      ref: ref,\n      children: dummySool.slice(offset, offset + limit).map(sool => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          sool: sool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 88\n        }, this)\n      }, sool.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 70\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      disabled: page === numPage,\n      children: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductSlide, \"RPQjqyYmzI4s9Pl0E+Cq3Np8sY4=\");\n\n_c = ProductSlide;\nexport default ProductSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSlide\");","map":{"version":3,"names":["React","useState","useRef","useEffect","dummySool","ProductCard","ProductSlide","cardSize","ref","limit","setLimit","countCard","page","setPage","getListSize","listItems","newWidth","current","clientWidth","window","addEventListener","offset","numPage","Math","ceil","length","slice","map","sool","id"],"sources":["/Users/chaeyerin/myProject/졸업 프로젝트/project/my_web/my-sool-recommender/src/Components/ProductSlide.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nimport dummySool from \"../static/dummyData\";\nimport ProductCard from \"./ProductCard\";\nimport './ProductSlide.css'\n\nconst ProductSlide = () => {\n    // 카드 + margin 값 -> 220px\n    const cardSize = 220;\n\n    // product-slide__wrapper의 width를 가져오기 위해 useRef 사용한다.\n    const ref = useRef()\n    // const countCard = () => {\n    //     // 현재 슬라이드 전체의 크기 가져오기\n    //     let newWidth = ref.current.clientWidth;\n    //     if(newWidth > cardSize * 5) return 5;\n    //     else if(newWidth > cardSize * 4) return 4;\n    //     else if(newWidth > cardSize * 3) return 3;\n    //     else if(newWidth > cardSize * 2) return 2;\n    //     else return 1;\n    // }\n\n    // 페이지 당 들어갈 수 있는 카드 수는 product-slide__wrapper의 width 값에 따라 달라져야 한다. -> setLimit으로 관리\n    // 유동적으로 관리할 수 있다면! -> ProductSlide.css 안의  flex-wrap 속성 설정해야 함\n    // 페이지 당 들어갈 카드 수 limit (state)\n    const [limit, setLimit] = useState(countCard());\n\n    // 페이지 바뀔 때마다 리렌더링\n    // 현재 페이지 번호 page (state)\n    const [page, setPage] = useState();\n\n    // 초기 렌더링 때\n    useEffect(() => {\n        getListSize();\n      }, [listItems]);\n\n    // 윈도우 크기가 바뀔 때마다 slide의 size 가져오기 \n    useEffect(() => {\n        let newWidth = ref.current.clientWidth;\n        window.addEventListener(\"resize\", () => {\n            if(newWidth > cardSize * 5){\n                setLimit(5)\n            }else if(newWidth > cardSize * 4){\n                setLimit(4)\n            }else if(newWidth > cardSize * 3){\n                setLimit(3)\n            }else if(newWidth > cardSize * 2){\n                setLimit(2)\n            }else{\n                setLimit(1)\n            }\n        });\n    }, []);\n\n\n    // 현재 페이지의 첫번째 요소의 index 구하기\n    // ex) 2페이지 면 리스트 중 3번째 요소이다. (2 - 1) * 3\n    const offset = (page - 1) * limit; \n\n    // 전체 페이지 계산 : 전체 데이터의 개수를 페이지 당 표시할 개수로 나눈다.\n    const numPage = Math.ceil(dummySool.length / limit)\n\n    return (\n        <div className=\"product-slide\">\n            {/* 이전 페이지 이동 */}\n            <button onClick={() => setPage(page-1)} disabled={page === 1}>left</button>\n            <ul className=\"product-slide__wrapper\" ref={ref}>\n                {/* 페이지 별로 slice 해서 보여준다 */}\n                {dummySool.slice(offset, offset+limit).map((sool) => <li key={sool.id}><ProductCard sool={sool}/></li>)}\n            </ul>\n            {/* 다음 페이지 이동 */}\n            <button onClick={() => setPage(page + 1)} disabled={page === numPage}>right</button>\n        </div>\n    )\n}\n\nexport default ProductSlide;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB;EACA,MAAMC,QAAQ,GAAG,GAAjB,CAFuB,CAIvB;;EACA,MAAMC,GAAG,GAAGN,MAAM,EAAlB,CALuB,CAMvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACU,SAAS,EAAV,CAAlC,CAnBuB,CAqBvB;EACA;;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC,CAvBuB,CAyBvB;;EACAE,SAAS,CAAC,MAAM;IACZW,WAAW;EACZ,CAFM,EAEJ,CAACC,SAAD,CAFI,CAAT,CA1BuB,CA8BvB;;EACAZ,SAAS,CAAC,MAAM;IACZ,IAAIa,QAAQ,GAAGR,GAAG,CAACS,OAAJ,CAAYC,WAA3B;IACAC,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;MACpC,IAAGJ,QAAQ,GAAGT,QAAQ,GAAG,CAAzB,EAA2B;QACvBG,QAAQ,CAAC,CAAD,CAAR;MACH,CAFD,MAEM,IAAGM,QAAQ,GAAGT,QAAQ,GAAG,CAAzB,EAA2B;QAC7BG,QAAQ,CAAC,CAAD,CAAR;MACH,CAFK,MAEA,IAAGM,QAAQ,GAAGT,QAAQ,GAAG,CAAzB,EAA2B;QAC7BG,QAAQ,CAAC,CAAD,CAAR;MACH,CAFK,MAEA,IAAGM,QAAQ,GAAGT,QAAQ,GAAG,CAAzB,EAA2B;QAC7BG,QAAQ,CAAC,CAAD,CAAR;MACH,CAFK,MAED;QACDA,QAAQ,CAAC,CAAD,CAAR;MACH;IACJ,CAZD;EAaH,CAfQ,EAeN,EAfM,CAAT,CA/BuB,CAiDvB;EACA;;EACA,MAAMW,MAAM,GAAG,CAACT,IAAI,GAAG,CAAR,IAAaH,KAA5B,CAnDuB,CAqDvB;;EACA,MAAMa,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUpB,SAAS,CAACqB,MAAV,GAAmBhB,KAA7B,CAAhB;EAEA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,wBAEI;MAAQ,OAAO,EAAE,MAAMI,OAAO,CAACD,IAAI,GAAC,CAAN,CAA9B;MAAwC,QAAQ,EAAEA,IAAI,KAAK,CAA3D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAI,SAAS,EAAC,wBAAd;MAAuC,GAAG,EAAEJ,GAA5C;MAAA,UAEKJ,SAAS,CAACsB,KAAV,CAAgBL,MAAhB,EAAwBA,MAAM,GAACZ,KAA/B,EAAsCkB,GAAtC,CAA2CC,IAAD,iBAAU;QAAA,uBAAkB,QAAC,WAAD;UAAa,IAAI,EAAEA;QAAnB;UAAA;UAAA;UAAA;QAAA;MAAlB,GAASA,IAAI,CAACC,EAAd;QAAA;QAAA;QAAA;MAAA,QAApD;IAFL;MAAA;MAAA;MAAA;IAAA,QAHJ,eAQI;MAAQ,OAAO,EAAE,MAAMhB,OAAO,CAACD,IAAI,GAAG,CAAR,CAA9B;MAA0C,QAAQ,EAAEA,IAAI,KAAKU,OAA7D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CApED;;GAAMhB,Y;;KAAAA,Y;AAsEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}